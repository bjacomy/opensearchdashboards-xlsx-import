{"version":3,"file":"opensearchDashboardXlsxImport.chunk.1.js","sources":["/plugin:opensearchDashboardXlsxImport/plugins/osd_xlsx_import/public/application.tsx","/plugin:opensearchDashboardXlsxImport/plugins/osd_xlsx_import/public/components/main.js","/plugin:opensearchDashboardXlsxImport/plugins/osd_xlsx_import/public/components/mappingTable.js","/plugin:opensearchDashboardXlsxImport/plugins/osd_xlsx_import/public/components/previewTable.js","/plugin:opensearchDashboardXlsxImport/plugins/osd_xlsx_import/public/components/stepOne.js","/plugin:opensearchDashboardXlsxImport/plugins/osd_xlsx_import/public/components/stepThree.js","/plugin:opensearchDashboardXlsxImport/plugins/osd_xlsx_import/public/components/stepTwo.js","/plugin:opensearchDashboardXlsxImport/plugins/osd_xlsx_import/public/services/services.js","/plugin:opensearchDashboardXlsxImport/plugins/osd_xlsx_import/public/services/sheetServices.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'; //import { AppMountParameters, ChromeStart, CoreStart } from '../../../src/core/public';\n\nimport Main from './components/main.js';\nimport { EuiStepsHorizontal } from '@elastic/eui';\nimport StepTwo from './components/stepTwo.js';\nimport StepThree from './components/stepThree.js';\nlet horizontalSteps = [{\n  title: 'Choose a file',\n  isSelected: true,\n  isComplete: false,\n  onClick: () => window.location.href = \"#\"\n}, {\n  title: 'Setup your index',\n  isSelected: false,\n  isComplete: false,\n  onClick: () => window.location.href = \"#\"\n}, {\n  title: 'Done !',\n  isSelected: false,\n  isComplete: false,\n  onClick: () => window.location.href = \"#\"\n}];\nconst supportedFileType = ['xlsx', 'csv']; // Defini les extensions utilisable dans le plugin\n\n/*function setBreadcrumbs(chrome: ChromeStart) {\n  chrome.setBreadcrumbs([\n    {\n      text: i18n.translate('devTools.k7BreadcrumbsDevToolsLabel', {\n        defaultMessage: 'opensearchdashboards-xlsx-import',\n      }),\n      href: '#/',\n    },\n  ]);\n}*/\n\nexport const renderApp = ({\n  notifications,\n  http\n}, {\n  navigation\n}, {\n  appBasePath,\n  element\n}, bulkSize, displayedRows) => //chrome: ChromeStart,\n{\n  var i;\n\n  for (i = 0; i < horizontalSteps.length; i++) {\n    horizontalSteps[i].isSelected = false;\n    horizontalSteps[i].isComplete = false;\n  }\n\n  horizontalSteps[0].isSelected = true; //setBreadcrumbs(chrome);\n\n  ReactDOM.render( /*#__PURE__*/React.createElement(Main, {\n    steps: horizontalSteps,\n    nextStep: displayStep2,\n    basename: appBasePath,\n    notifications: notifications,\n    http: http,\n    navigation: navigation,\n    maxDisplayableElement: displayedRows\n  }), element);\n  return () => ReactDOM.unmountComponentAtNode(element); // omment\n\n  function displayStep2(fileName, sheetName, workbook, firstRow, columns) {\n    horizontalSteps[0].isSelected = false;\n    horizontalSteps[0].isComplete = true;\n    horizontalSteps[1].isSelected = true;\n    ReactDOM.render( /*#__PURE__*/React.createElement(EuiStepsHorizontal, {\n      steps: horizontalSteps,\n      style: {\n        backgroundColor: \"white\"\n      }\n    }), document.getElementById(\"step\"));\n    ReactDOM.render( /*#__PURE__*/React.createElement(StepTwo, {\n      http: http,\n      notifications: notifications,\n      fileName: fileName,\n      sheetName: sheetName,\n      columns: columns,\n      firstRow: firstRow,\n      nextStep: displayStep3,\n      workbook: workbook,\n      bulksize: bulkSize\n    }), document.getElementById(\"main\"));\n  }\n\n  function displayStep3(indexName, sheetName, fileName, nbDocument) {\n    horizontalSteps[1].isSelected = false;\n    horizontalSteps[1].isComplete = true;\n    horizontalSteps[2].isSelected = true;\n    ReactDOM.render( /*#__PURE__*/React.createElement(EuiStepsHorizontal, {\n      steps: horizontalSteps,\n      style: {\n        backgroundColor: \"white\"\n      }\n    }), document.getElementById(\"step\"));\n    ReactDOM.render( /*#__PURE__*/React.createElement(StepThree, {\n      indexName: indexName,\n      sheetName: sheetName,\n      fileName: fileName,\n      nbDocument: nbDocument\n    }), document.getElementById(\"main\"));\n  }\n};","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { i18n } from '@osd/i18n';\nimport { FormattedMessage, I18nProvider } from '@osd/i18n/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { EuiButton, EuiHorizontalRule, EuiPage, EuiPageBody, EuiPageContent, EuiPageContentBody, EuiPageContentHeader, EuiPageHeader, EuiStepsHorizontal, EuiHeader, EuiHeaderSection, EuiHeaderSectionItem, EuiFlexGroup, EuiFlexItem, EuiIcon, EuiTitle, EuiText } from '@elastic/eui';\nimport { CoreStart } from '../../../../src/core/public';\nimport { NavigationPublicPluginStart } from '../../../../src/plugins/navigation/public';\nimport { PLUGIN_ID, PLUGIN_NAME } from '../../common';\nimport StepOne from './stepOne.js';\nexport const Main = ({\n  steps,\n  nextStep,\n  basename,\n  notifications,\n  http,\n  navigation,\n  maxDisplayableElement\n}) => {\n  // Render the application DOM.\n  // Note that `navigation.ui.TopNavMenu` is a stateful component exported on the `navigation` plugin's start contract.\n  return /*#__PURE__*/React.createElement(EuiPage, null, /*#__PURE__*/React.createElement(EuiPageBody, null, /*#__PURE__*/React.createElement(EuiPageHeader, null, /*#__PURE__*/React.createElement(EuiHeader, {\n    style: {\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/React.createElement(EuiHeaderSection, null, /*#__PURE__*/React.createElement(EuiHeaderSectionItem, {\n    border: \"right\"\n  }, /*#__PURE__*/React.createElement(EuiFlexGroup, {\n    justifyContent: \"center\",\n    style: {\n      padding: \"5px\"\n    }\n  }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n    grow: false\n  }, /*#__PURE__*/React.createElement(EuiIcon, {\n    type: \"importAction\",\n    size: \"xxl\"\n  })))), /*#__PURE__*/React.createElement(EuiHeaderSectionItem, null, /*#__PURE__*/React.createElement(EuiTitle, {\n    style: {\n      padding: \"12px 5px 5px 15px\"\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", null, \"XLSX Import\")))))), /*#__PURE__*/React.createElement(EuiPageContent, null, /*#__PURE__*/React.createElement(EuiPageContentHeader, {\n    id: \"step\"\n  }, /*#__PURE__*/React.createElement(EuiStepsHorizontal, {\n    steps: steps,\n    style: {\n      backgroundColor: \"white\"\n    }\n  })), /*#__PURE__*/React.createElement(EuiPageContentBody, {\n    id: \"main\"\n  }, /*#__PURE__*/React.createElement(StepOne, {\n    nextStep: nextStep,\n    maxDisplayableElement: maxDisplayableElement\n  })))));\n};\nexport default Main;","import React, { useState } from 'react';\nimport { EuiBasicTable, EuiSelect, EuiTextArea } from '@elastic/eui';\nexport function getMappingByColumns(columns) {\n  let nbJsonInvalid = 0; // get the initial items list and convert it to a mapping properties content\n\n  let mappingObj = columns.reduce(function (acc, cur, i) {\n    if (cur.isJsonInvalid) {\n      nbJsonInvalid++;\n      return acc;\n    }\n\n    acc[cur.name] = {\n      type: cur.type || \"text\",\n      // default value \"text\" if no type\n      ...cur.json\n    };\n    return acc;\n  }, {});\n\n  if (nbJsonInvalid > 0) {\n    return false;\n  }\n\n  return mappingObj;\n}\n\nconst MappingTable = ({\n  items,\n  onChangeColumns\n}) => {\n  const [mappingArr, setMappingArr] = useState(items);\n\n  const handlePropertyChange = (item, updatedContent) => {\n    // update the given item with new type or advanced json content\n    const newMappingArr = mappingArr.map(i => {\n      if (i.name !== item) {\n        return i;\n      }\n\n      return { ...i,\n        ...updatedContent\n      };\n    });\n    setMappingArr(newMappingArr);\n    onChangeColumns(newMappingArr);\n  }; // specific process to parse JSON and detect potential syntax error\n\n\n  const handlePropertyJsonChange = (item, updatedContent) => {\n    let parsedContent = updatedContent.json;\n\n    try {\n      if (parsedContent) {\n        parsedContent = {\n          json: JSON.parse(parsedContent),\n          isJsonInvalid: false\n        };\n      }\n    } catch (err) {\n      parsedContent = {\n        json: parsedContent,\n        isJsonInvalid: true\n      };\n    } // update the given item with new type or advanced json content\n\n\n    handlePropertyChange(item, parsedContent);\n  };\n\n  const options = [{\n    value: 'text',\n    text: 'Text'\n  }, {\n    value: 'keyword',\n    text: 'Keyword'\n  }, {\n    value: 'integer',\n    text: 'Integer'\n  }, {\n    value: 'short',\n    text: 'Short'\n  }, {\n    value: 'long',\n    text: 'Long'\n  }, {\n    value: 'double',\n    text: 'Double'\n  }, {\n    value: 'float',\n    text: 'Float'\n  }, {\n    value: 'date',\n    text: 'Date'\n  }, {\n    value: 'boolean',\n    text: 'Boolean'\n  }, {\n    value: 'byte',\n    text: 'Byte'\n  }, {\n    value: 'binary',\n    text: 'Binary'\n  }, {\n    value: 'ip',\n    text: 'IP'\n  }, {\n    value: 'geo_point',\n    text: 'Geo Point'\n  }, {\n    value: 'geo_shape',\n    text: 'Geo Shape'\n  }];\n  const columns = [{\n    field: 'name',\n    name: 'Fields'\n  }, {\n    field: 'type',\n    name: 'Type',\n    render: (name, item) => /*#__PURE__*/React.createElement(EuiSelect, {\n      options: options,\n      defaultValue: name,\n      onChange: e => {\n        handlePropertyChange(item.name, {\n          type: e.target.value\n        });\n      }\n    })\n  }, {\n    field: 'json',\n    name: 'Advanced JSON',\n    render: (name, item) => /*#__PURE__*/React.createElement(EuiTextArea, {\n      className: \"advjsontext\",\n      isInvalid: item.isJsonInvalid,\n      rows: 4,\n      placeholder: `{\n  \"type\": \"${item.type}\",\n  ...\n}`,\n      onChange: e => {\n        handlePropertyJsonChange(item.name, {\n          json: e.target.value\n        });\n      }\n    })\n  }];\n  return /*#__PURE__*/React.createElement(EuiBasicTable, {\n    items: mappingArr,\n    columns: columns\n  });\n};\n\nexport default MappingTable;","import React from 'react';\nimport { EuiBasicTable } from '@elastic/eui';\n\nconst PreviewTable = props => {\n  return /*#__PURE__*/React.createElement(EuiBasicTable, {\n    items: props.items,\n    columns: props.columns,\n    tableLayout: \"auto\",\n    isExpandable: true\n  });\n};\n\nexport default PreviewTable;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { EuiForm, EuiFormRow, EuiFlexGroup, EuiFlexItem, EuiFilePicker, EuiTitle, EuiSpacer, EuiButton, EuiLoadingSpinner, EuiSelect, EuiPanel, EuiImage } from '@elastic/eui';\nimport PreviewTable from './previewTable.js';\nimport XLSX from 'xlsx';\nimport { getHeaderRowWithType, formatJSON, getExtension, setESIndexName } from '../services/sheetServices.js';\n\nclass StepOne extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onFileChange\", file => {\n      if (file.length > 0) {\n        //UI reset\n        this.setState({\n          selectItem: {\n            options: [{\n              value: \"\",\n              text: \"\"\n            }]\n          },\n          data: {\n            loaded: false,\n            items: [],\n            columns: []\n          },\n          disableButton: true,\n          loading: true\n        });\n        var reader = new FileReader();\n\n        reader.onload = async file => {\n          if (getExtension(this.state.fileName)[0] != \"csv\") {\n            var wb = await XLSX.read(reader.result, {\n              type: 'array',\n              cellDates: true,\n              cellNF: false,\n              cellText: false\n            });\n          } else {\n            var wb = await XLSX.read(reader.result, {\n              type: 'binary'\n            });\n          }\n\n          var options = wb.SheetNames.map(s => ({\n            value: s,\n            text: s\n          }));\n          this.setState({\n            workbook: wb,\n            selectItem: {\n              options\n            },\n            loading: false\n          });\n          this.changeSheet(options[0].value);\n        };\n\n        if (getExtension(file[0].name)[0] != \"csv\") reader.readAsArrayBuffer(file[0]);else {\n          reader.readAsText(file[0]);\n        }\n        ;\n        this.setState({\n          fileName: file[0].name\n        });\n      } else {\n        this.setState({\n          selectItem: {\n            options: [{\n              value: \"\",\n              text: \"\"\n            }]\n          },\n          data: {\n            loaded: false,\n            items: [],\n            columns: []\n          },\n          disableButton: true,\n          workbook: {}\n        });\n      }\n    });\n\n    this.maxDisplayableElement = props.maxDisplayableElement;\n    this.state = {\n      workbook: {},\n      fileName: \"\",\n      sheetName: \"\",\n      selectItem: {\n        options: [{\n          value: \"\",\n          text: \"\"\n        }]\n      },\n      data: {\n        loaded: false,\n        items: [],\n        columns: []\n      },\n      disableButton: true,\n      loading: false\n    };\n  }\n\n  async onSheetChange(item) {\n    this.changeSheet(item.target.value);\n  }\n\n  changeSheet(item) {\n    this.setState({\n      data: {\n        loaded: false\n      },\n      sheetName: item\n    });\n\n    if (item === \"\") {\n      this.setState({\n        data: {\n          loaded: true,\n          items: [],\n          columns: []\n        },\n        disableButton: true\n      });\n      return;\n    }\n\n    if (this.state.workbook.Sheets[item]['!ref'] != undefined) {\n      let range = XLSX.utils.decode_range(this.state.workbook.Sheets[item]['!ref']);\n      console.log(range.e.r);\n      if (range.e.r > 5) range.e.r = this.maxDisplayableElement; //TODO : use config instead\n\n      let columns = getHeaderRowWithType(this.state.workbook.Sheets[item]);\n      let items = formatJSON(XLSX.utils.sheet_to_json(this.state.workbook.Sheets[item], {\n        range: range,\n        raw: false,\n        dateNF: 'YYYY-MM-DD\"T\"HH:MM:SS'\n      }), columns);\n      this.setState({\n        data: {\n          loaded: true,\n          items: items,\n          columns: columns\n        },\n        disableButton: false\n      });\n    } else {\n      this.setState({\n        data: {\n          loaded: true,\n          items: [],\n          columns: []\n        },\n        disableButton: true\n      });\n    }\n  }\n\n  onNextClick(e) {\n    this.props.nextStep(this.state.fileName, this.state.sheetName, this.state.workbook, this.state.data.items[0], this.state.data.columns);\n  }\n\n  render() {\n    let sheetDisabled = true;\n    let previewTable = null;\n    let renderLoading = null;\n    if (!(Object.keys(this.state.workbook).length === 0 && this.state.workbook.constructor === Object)) sheetDisabled = false;\n\n    if (this.state.data.loaded) {\n      previewTable = /*#__PURE__*/React.createElement(PreviewTable, {\n        items: this.state.data.items,\n        columns: this.state.data.columns.map(c => ({\n          field: c.name,\n          name: c.name,\n          truncateText: true\n        }))\n      });\n    }\n\n    if (this.state.loading) {\n      renderLoading = /*#__PURE__*/React.createElement(EuiFlexGroup, {\n        justifyContent: \"spaceAround\"\n      }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n        grow: false\n      }, /*#__PURE__*/React.createElement(EuiLoadingSpinner, {\n        size: \"xl\"\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(EuiFlexGroup, {\n      gutterSize: \"l\"\n    }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, /*#__PURE__*/React.createElement(EuiFormRow, null, /*#__PURE__*/React.createElement(EuiTitle, {\n      size: \"s\"\n    }, /*#__PURE__*/React.createElement(\"h1\", null, \"Import your xlsx and csv file to ElasticSearch\"))), /*#__PURE__*/React.createElement(EuiFormRow, null, /*#__PURE__*/React.createElement(EuiFilePicker, {\n      id: \"asdf2\",\n      initialPromptText: \"Select or drag and drop file\",\n      onChange: file => {\n        this.onFileChange(file);\n      }\n    })), /*#__PURE__*/React.createElement(EuiFormRow, null, /*#__PURE__*/React.createElement(EuiFlexGroup, {\n      gutterSize: \"l\",\n      alignItems: \"flexEnd\",\n      justifyContent: \"spaceBetween\",\n      style: {\n        marginLeft: \"0px\"\n      }\n    }, /*#__PURE__*/React.createElement(EuiFormRow, {\n      label: \"Select the sheet to import\"\n    }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, /*#__PURE__*/React.createElement(EuiSelect, {\n      options: this.state.selectItem.options,\n      disabled: sheetDisabled,\n      onChange: item => {\n        this.onSheetChange(item);\n      }\n    }))), /*#__PURE__*/React.createElement(EuiFormRow, null, /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, /*#__PURE__*/React.createElement(EuiButton, {\n      iconType: \"arrowRight\",\n      disabled: this.state.disableButton,\n      onClick: e => {\n        this.onNextClick(e);\n      }\n    }, \"Next\"))))))), renderLoading, /*#__PURE__*/React.createElement(EuiSpacer, {\n      size: \"l\"\n    }), /*#__PURE__*/React.createElement(EuiFlexGroup, {\n      gutterSize: \"l\"\n    }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, previewTable)));\n  }\n\n}\n\nexport default StepOne;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport { EuiCallOut, EuiSpacer, EuiButtonEmpty, EuiForm, EuiFormRow, EuiFlexItem, EuiFlexGroup, EuiPanel } from '@elastic/eui';\n\nclass StepThree extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClickNewImport\", () => {\n      window.location.reload();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(EuiForm, null, /*#__PURE__*/React.createElement(EuiFormRow, null, /*#__PURE__*/React.createElement(EuiCallOut, {\n      title: \"Your file have been imported !\",\n      color: \"success\",\n      iconType: \"check\"\n    }, /*#__PURE__*/React.createElement(EuiSpacer, {\n      size: \"s\"\n    }), /*#__PURE__*/React.createElement(\"p\", null, this.props.nbDocument, \" document(s) have been imported into \", this.props.indexName, \".\"), /*#__PURE__*/React.createElement(\"p\", null, \"File name : \", this.props.fileName), /*#__PURE__*/React.createElement(\"p\", null, \"Sheet name : \", this.props.sheetName))), /*#__PURE__*/React.createElement(EuiFormRow, null, /*#__PURE__*/React.createElement(EuiFlexGroup, {\n      gutterSize: \"s\",\n      alignItems: \"center\"\n    }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, /*#__PURE__*/React.createElement(EuiButtonEmpty, {\n      href: \"../app/management/opensearch-dashboards/indexPatterns/create\",\n      size: \"s\",\n      iconType: \"arrowRight\"\n    }, \"Create the index pattern\")))), /*#__PURE__*/React.createElement(EuiFormRow, null, /*#__PURE__*/React.createElement(EuiFlexGroup, {\n      gutterSize: \"s\",\n      alignItems: \"center\"\n    }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, /*#__PURE__*/React.createElement(EuiButtonEmpty, {\n      onClick: this.handleClickNewImport,\n      size: \"s\",\n      iconType: \"arrowRight\"\n    }, \"Import a new file\"))))));\n  }\n\n}\n\nexport default StepThree;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport { EuiSwitch, EuiAccordion, EuiButton, EuiButtonEmpty, EuiComboBox, EuiFieldText, EuiFlexGroup, EuiFlexItem, EuiForm, EuiFormRow, EuiFormHelpText, EuiGlobalToastList, EuiIconTip, EuiImage, EuiLink, EuiPanel, EuiProgress, EuiSpacer } from '@elastic/eui';\nimport moment from 'moment-timezone';\nimport MappingTable, { getMappingByColumns } from './mappingTable.js';\nimport axios from 'axios';\nimport XLSX from 'xlsx';\nimport { createBulk, createOsdCustomId, getUID } from '../services/services.js';\nimport { setESIndexName, formatJSON } from '../services/sheetServices.js';\n\nclass StepTwo extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"addErrorToast\", (msg, optionalTips = false) => {\n      const toast = {\n        id: getUID(),\n        title: \"Couldn't complete the import\",\n        color: \"danger\",\n        iconType: \"alert\",\n        text: /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, msg), optionalTips && /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontWeight: 'bold'\n          }\n        }, optionalTips))\n      };\n      this.setState({\n        toasts: this.state.toasts.concat(toast)\n      });\n    });\n\n    _defineProperty(this, \"addMappingToast\", () => {\n      const toast = {\n        id: getUID(),\n        title: \"Mapping change detected\",\n        text: /*#__PURE__*/React.createElement(\"p\", null, \"Custom mapping enable.\")\n      };\n      this.setState({\n        toasts: this.state.toasts.concat(toast)\n      });\n    });\n\n    _defineProperty(this, \"removeToast\", removedToast => {\n      this.setState(prevState => ({\n        toasts: prevState.toasts.filter(toast => toast.id !== removedToast.id)\n      }));\n    });\n\n    _defineProperty(this, \"removeAllToasts\", () => {\n      this.setState({\n        toasts: []\n      });\n    });\n\n    this.firstRow = { ...this.props.firstRow,\n      _line: \"1337\",\n      _uid: getUID()\n    };\n    this.anonOptions = this.props.columns.map(c => ({\n      label: c.name\n    }));\n    this.tzOptions = moment.tz.names().map(tz => ({\n      label: tz\n    }));\n    this.state = {\n      indexName: setESIndexName(this.props.fileName) + '_' + setESIndexName(this.props.sheetName),\n      indexNameError: false,\n      networkError: false,\n      selectedAnonOptions: [],\n      selectedTzOption: [{\n        label: moment.tz.guess()\n      }],\n      osdId: {\n        model: \"line{_line}-{_uid}\",\n        preview: createOsdCustomId(\"line{_line}-{_uid}\", this.firstRow)\n      },\n      uploadButton: {\n        text: \"Import\",\n        loading: false\n      },\n      customColumns: this.props.columns,\n      enableCustomColumns: false,\n      pipeline: \"\",\n      enablePipeline: false,\n      progress: {\n        show: false,\n        current: 0,\n        color: \"secondary\"\n      },\n      toasts: []\n    };\n    this.indexNameChange = this.indexNameChange.bind(this);\n    this.osdIdChange = this.osdIdChange.bind(this);\n    this.onChangeAnonColumns = this.onChangeAnonColumns.bind(this);\n    this.onToggleCustomColumns = this.onToggleCustomColumns.bind(this);\n    this.onTogglePipeline = this.onTogglePipeline.bind(this);\n    this.onChangeColumns = this.onChangeColumns.bind(this);\n    this.onChangePipeline = this.onChangePipeline.bind(this);\n    this.onChangeTimezone = this.onChangeTimezone.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleNextStep = this.handleNextStep.bind(this);\n    this.backClick = this.backClick.bind(this);\n    this.addErrorToast = this.addErrorToast.bind(this);\n    this.addMappingToast = this.addMappingToast.bind(this);\n    this.removeToast = this.removeToast.bind(this);\n    this.getFilteredColumns = this.getFilteredColumns.bind(this);\n    this.http = this.props.http;\n    axios.defaults.headers.post['osd-xsrf'] = \"reporting\";\n    axios.defaults.headers.delete['osd-xsrf'] = \"reporting\";\n  } // Return the anonymised-filtered items list\n\n\n  getFilteredColumns() {\n    return this.state.customColumns.filter(column => !this.state.selectedAnonOptions.map(a => a.label).includes(column.name));\n  }\n\n  indexNameChange(e) {\n    if (/[~`!#$%\\^&*+=\\\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(e.target.value) || /[A-Z]/.test(e.target.value)) this.setState({\n      indexName: e.target.value,\n      indexNameError: true\n    });else {\n      this.setState({\n        indexName: e.target.value,\n        indexNameError: false\n      });\n    }\n  }\n\n  osdIdChange(e) {\n    this.setState({\n      osdId: {\n        model: e.target.value,\n        preview: createOsdCustomId(e.target.value, this.firstRow)\n      }\n    });\n  }\n\n  onChangeAnonColumns(e) {\n    this.setState({\n      selectedAnonOptions: e\n    });\n  }\n\n  onChangeTimezone(e) {\n    this.setState({\n      selectedTzOption: e\n    });\n  }\n\n  onToggleCustomColumns(e) {\n    this.setState({\n      enableCustomColumns: e.target.checked\n    });\n  }\n\n  onTogglePipeline(e) {\n    this.setState({\n      enablePipeline: e.target.checked\n    });\n  }\n\n  onChangeColumns(columns) {\n    this.setState({\n      customColumns: columns\n    });\n  }\n\n  onChangePipeline(e) {\n    this.setState({\n      pipeline: e.target.value\n    });\n  }\n\n  handleClick(e) {\n    this.setState({\n      progress: {\n        show: true,\n        current: 0,\n        color: \"secondary\"\n      }\n    });\n    this.handleNextStep();\n  }\n\n  async handleNextStep() {\n    try {\n      this.setState({\n        uploadButton: {\n          text: \"Initializing index...\",\n          loading: true\n        }\n      });\n      let customMapping = getMappingByColumns(this.state.customColumns);\n      console.log(\"applying mapping\");\n\n      if (this.state.enableCustomColumns) {\n        console.log(\"creating index\", this.state.indexName);\n        const resIndex = await axios.post(`../api/opensearchdashboards_xlsx_import/create/indice/${this.state.indexName}`);\n        console.log(\"resIndex\", resIndex);\n\n        if (resIndex.data.message != undefined) {\n          throw {\n            message: resIndex.data.message.msg,\n            tips: \"Unable to create the index.\",\n            skipDelete: true // index probably already exists. don't delete it\n\n          };\n        }\n\n        console.log(\"applying mapping\");\n        let customMapping = getMappingByColumns(this.state.customColumns);\n\n        if (customMapping === false) {\n          throw {\n            message: \"Invalid JSON syntax in your mapping.\",\n            tips: \"Unable to applying the mapping. Check your configuration.\"\n          };\n        }\n\n        const requestMapping = {\n          body: customMapping\n        };\n        const resMap = await axios.post(`../api/opensearchdashboards-xlsx-import/${this.state.indexName}/_mapping`, requestMapping);\n\n        if (resMap.data.message != undefined) {\n          throw {\n            message: resMap.data.message.msg,\n            tips: \"Unable to applying the mapping. Check your configuration.\"\n          };\n        }\n      }\n\n      this.setState({\n        uploadButton: {\n          text: \"Reading data...\",\n          loading: true\n        }\n      });\n      const tz = this.state.selectedTzOption[0].label;\n      const ws = this.props.workbook.Sheets[this.props.sheetName];\n      const json = formatJSON(XLSX.utils.sheet_to_json(ws, {\n        raw: false,\n        dateNF: 'YYYY-MM-DD\"T\"HH:MM:SS'\n      }), this.state.customColumns, tz);\n\n      if (this.state.selectedAnonOptions.length > 0) {\n        console.log(\"filtering anonymised fields from json ...\");\n        const filter = this.state.selectedAnonOptions.map(s => s.label);\n        json.map(j => filter.forEach(e => delete j[e]));\n      }\n\n      var bulk = createBulk(json, this.state.indexName, this.state.osdId.model, this.props.bulksize);\n      console.log(\"sending documents to\", this.state.indexName);\n      this.setState({\n        uploadButton: {\n          text: \"Importing data...\",\n          loading: true\n        }\n      });\n      let bulkPath = `../api/opensearchdashboards-xlsx-import/${this.state.indexName}/_bulk`;\n\n      if (this.state.enablePipeline && this.state.pipeline) {\n        bulkPath += \"?pipeline=\" + this.state.pipeline;\n      }\n\n      for (var i = 0; i < bulk.length; i++) {\n        this.setState({\n          progress: {\n            current: i / bulk.length * 100\n          }\n        });\n        const response = await axios.post(bulkPath, bulk[i]);\n        console.log(\"resonse_bulk\", response);\n\n        if (response.data.data.errors) {\n          const invalidItems = response.data.data.items // parse all items\n          .map(item => ({ ...item,\n            isInvalid: item.index.status < 200 || item.index.status >= 300\n          }) // is the status in error ?\n          ).filter(item => item.isInvalid); // filter only the error\n\n          throw {\n            reason: \"Some lines are invalid according to the mapping index. The import will be aborted. Check browser console for full errors list\",\n            items: invalidItems,\n            fullstack: invalidItems\n          };\n        } else if (response.data.error) {\n          this.setState({\n            networkError: true\n          });\n          throw {\n            reason: response.data.error.message,\n            fullstack: response.data.error\n          };\n        } else if (i === bulk.length - 1) {\n          break;\n        }\n      } // finally call the next step\n\n\n      this.props.nextStep(this.state.indexName, this.props.sheetName, this.props.fileName, json.length);\n    } catch (err) {\n      console.log(\"catched error\");\n      console.log(err);\n\n      if (err.items) {\n        err.items.slice(0, 5).forEach(item => {\n          // reason for first 5 errors\n          let optionalCausedBy = item.index.error && item.index.error.caused_by && item.index.error.caused_by.reason;\n          this.addErrorToast(item.index.error.reason, optionalCausedBy);\n        });\n\n        if (err.items.length > 5) {\n          this.addErrorToast(err.reason);\n        }\n      } else if (!err.skipToast) {\n        this.addErrorToast(err.message || \"Something wrong happened, check browser console for more information\", err.tips || false);\n      }\n\n      console.log(err.fullstack);\n\n      if (!err.skipDelete) {\n        axios.delete(`../api/opensearchdashboards-xlsx-import/${this.state.indexName}`);\n      }\n\n      this.setState({\n        uploadButton: {\n          text: \"Import\",\n          loading: false\n        },\n        progress: {\n          show: false,\n          color: \"danger\"\n        }\n      });\n    }\n  }\n\n  backClick(e) {\n    window.location.reload();\n  }\n\n  render() {\n    const errors = [\"Index name must be all lowercase and don't contains special characters\"];\n    let progressBar = null;\n\n    if (this.state.progress.show) {\n      progressBar = /*#__PURE__*/React.createElement(EuiProgress, {\n        value: this.state.progress.current,\n        max: 100,\n        color: \"secondary\",\n        size: \"s\"\n      });\n    }\n\n    let mappingTooltipContent = /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"Mapping is the process of defining how a document, and the fields it contains, are stored and indexed. \", /*#__PURE__*/React.createElement(\"br\", null), \"Fields and mapping types do not need to be defined before being used. \", /*#__PURE__*/React.createElement(\"br\", null), \"You know more about your data than Elasticsearch can guess, so while dynamic mapping can be useful to get started, at some point you will want to specify your own explicit mappings.\", /*#__PURE__*/React.createElement(\"br\", null), \"For instance, use mappings to define:\"), /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"li\", null, \"- which string fields should be treated as full text fields.\"), /*#__PURE__*/React.createElement(\"li\", null, \"- which fields contain numbers, dates, or geolocations.\"), /*#__PURE__*/React.createElement(\"li\", null, \"- the format of date values.\"), /*#__PURE__*/React.createElement(\"li\", null, \"- custom rules to control the mapping for dynamically added fields.\")), /*#__PURE__*/React.createElement(\"p\", null, \"See Mapping API section on elastic.co\"));\n    let pipelineTooltipContent = /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"To pre-process documents before indexing, define a pipeline that specifies a series of processors. \", /*#__PURE__*/React.createElement(\"br\", null), \"Each processor tranforms the document in some specific way.\", /*#__PURE__*/React.createElement(\"br\", null), \"For example, a pipeline might have one processor that concatenate two fields from the document, followed by another processor that renames a field.\"), /*#__PURE__*/React.createElement(\"p\", null, \"See Pipeline API section on elastic.co\"));\n    return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(EuiForm, null, /*#__PURE__*/React.createElement(EuiFormRow, {\n      isInvalid: this.state.indexNameError,\n      label: \"Index name\",\n      error: errors,\n      helpText: \"Name the elasticsearch index that will be created. If the index is already existing, \" + \"documents will be added or updated according to the chosen docID\"\n    }, /*#__PURE__*/React.createElement(EuiFieldText, {\n      isInvalid: this.state.indexNameError,\n      id: \"indexName\",\n      value: this.state.indexName,\n      onChange: this.indexNameChange\n    })), /*#__PURE__*/React.createElement(EuiFormRow, {\n      label: \"Custom docID\",\n      helpText: \"Import will provide a unique document identifier linked to the line number \" + \"of the imported file. You can customize this doc ID using special reserved variables : \" + \"{_uid} for an auto-generated identifier, {_importedLine} for the current line number, \" + \"or {<column-name>} to access a value of the imported line.\"\n    }, /*#__PURE__*/React.createElement(EuiFlexGroup, {\n      gutterSize: \"s\",\n      alignItems: \"center\"\n    }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, /*#__PURE__*/React.createElement(EuiFieldText, {\n      id: \"osdID\",\n      value: this.state.osdId.model,\n      onChange: this.osdIdChange\n    })), /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \"x-small\",\n        margin: \"-10px auto 2px 12px\"\n      }\n    }, \"example rendering\"), /*#__PURE__*/React.createElement(EuiFieldText, {\n      id: \"previewOsdID\",\n      placeholder: \"Custom ID preview\",\n      value: this.state.osdId.preview,\n      readOnly: true\n    })))), /*#__PURE__*/React.createElement(EuiFormRow, {\n      label: \"Removing columns\",\n      helpText: \"Select the columns you want to remove from the import.\"\n    }, /*#__PURE__*/React.createElement(EuiComboBox, {\n      options: this.anonOptions,\n      selectedOptions: this.state.selectedAnonOptions,\n      onChange: this.onChangeAnonColumns\n    })), /*#__PURE__*/React.createElement(EuiFormRow, {\n      label: \"Choose your timezone\",\n      helpText: \"Excel does not manage timezone within date format cells. Define your file content timezone to index its date fields in a correct way.\"\n    }, /*#__PURE__*/React.createElement(EuiComboBox, {\n      singleSelection: {\n        asPlainText: true\n      },\n      options: this.tzOptions,\n      selectedOptions: this.state.selectedTzOption,\n      onChange: this.onChangeTimezone,\n      isClearable: false\n    })), /*#__PURE__*/React.createElement(EuiSpacer, {\n      size: \"s\"\n    }), /*#__PURE__*/React.createElement(EuiFormRow, {\n      fullWidth: true\n    }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(EuiSwitch, {\n      label: \"Configure your own mapping\",\n      checked: this.state.enableCustomColumns,\n      onChange: this.onToggleCustomColumns\n    }), \"\\xA0\", /*#__PURE__*/React.createElement(EuiIconTip, {\n      \"aria-label\": \"Info about mapping\",\n      position: \"right\",\n      content: mappingTooltipContent\n    }))), this.state.enableCustomColumns && /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(MappingTable, {\n      items: this.getFilteredColumns(),\n      onChangeColumns: this.onChangeColumns\n    }), /*#__PURE__*/React.createElement(EuiSpacer, {\n      size: \"m\"\n    })), /*#__PURE__*/React.createElement(EuiFormRow, {\n      fullWidth: true\n    }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(EuiSwitch, {\n      label: \"Add ingest pipeline ids\",\n      checked: this.state.enablePipeline,\n      onChange: this.onTogglePipeline\n    }), \"\\xA0\", /*#__PURE__*/React.createElement(EuiIconTip, {\n      \"aria-label\": \"Info about pipeline\",\n      position: \"right\",\n      content: pipelineTooltipContent\n    }))), this.state.enablePipeline && /*#__PURE__*/React.createElement(EuiFormRow, {\n      label: \"Set pipeline ids\",\n      helpText: \"The pipeline ids to preprocess incoming documents with, comma separated list.\"\n    }, /*#__PURE__*/React.createElement(EuiFieldText, {\n      placeholder: \"pipeline1,pipeline2\",\n      defaultValue: this.state.pipeline,\n      onChange: this.onChangePipeline,\n      \"aria-label\": \"The pipeline ids to preprocess incoming documents with, comma separated list\"\n    })), /*#__PURE__*/React.createElement(EuiSpacer, {\n      size: \"m\"\n    }), /*#__PURE__*/React.createElement(EuiFormRow, null, /*#__PURE__*/React.createElement(EuiFlexGroup, {\n      gutterSize: \"s\",\n      alignItems: \"center\"\n    }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, /*#__PURE__*/React.createElement(EuiButtonEmpty, {\n      onClick: this.backClick,\n      size: \"s\",\n      iconType: \"arrowLeft\"\n    }, \"back\")), /*#__PURE__*/React.createElement(EuiFlexItem, {\n      grow: false\n    }, /*#__PURE__*/React.createElement(EuiButton, {\n      fill: true,\n      isDisabled: this.state.indexNameError,\n      onClick: this.handleNextStep,\n      iconType: \"importAction\",\n      isLoading: this.state.uploadButton.loading\n    }, this.state.uploadButton.text)))), /*#__PURE__*/React.createElement(EuiGlobalToastList, {\n      toasts: this.state.toasts,\n      dismissToast: this.removeToast,\n      toastLifeTimeMs: 15000\n    })), /*#__PURE__*/React.createElement(EuiSpacer, {\n      size: \"m\"\n    }), /*#__PURE__*/React.createElement(EuiProgress, {\n      value: this.state.progress.current,\n      max: 100,\n      color: this.state.progress.color,\n      size: \"s\"\n    }));\n  }\n\n}\n\nexport default StepTwo;","//import { nanoid } from 'nanoid';\nexport function broofa() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nexport function createBulk(json, indexName, osdCustomId = '', BULKSIZE = 1000) {\n  var bulk_request = [];\n  var bulk_package = [];\n  let line = 2; // +2 == (header line + begin from 1 not from 0)\n\n  for (var i = 0; i < json.length; i++) {\n    const keys = { // all columns name are usable to create custom document id \n      ...json[i],\n      // or special reserved variable\n      \"_line\": line,\n      \"_uid\": broofa() //\"_uid\": 10000000\n\n    };\n    bulk_package.push({\n      index: {\n        _index: indexName,\n        ...(osdCustomId !== '' && {\n          _id: createOsdCustomId(osdCustomId, keys)\n        })\n      }\n    });\n    bulk_package.push(json[i]);\n\n    if (bulk_package.length >= BULKSIZE) {\n      bulk_request.push(bulk_package);\n      bulk_package = [];\n      if (json[i + 1] === undefined) return bulk_request;\n    }\n\n    line++;\n  }\n\n  bulk_request.push(bulk_package);\n  return bulk_request;\n}\nexport function getUID() {\n  return broofa();\n}\nexport function createOsdCustomId(template, obj) {\n  var getFromBetween = {\n    results: [],\n    string: \"\",\n    getFromBetween: function (sub1, sub2) {\n      if (this.string.indexOf(sub1) < 0 || this.string.indexOf(sub2) < 0) return false;\n      var SP = this.string.indexOf(sub1) + sub1.length;\n      var string1 = this.string.substr(0, SP);\n      var string2 = this.string.substr(SP);\n      var TP = string1.length + string2.indexOf(sub2);\n      return this.string.substring(SP, TP);\n    },\n    removeFromBetween: function (sub1, sub2) {\n      if (this.string.indexOf(sub1) < 0 || this.string.indexOf(sub2) < 0) return false;\n      var removal = sub1 + this.getFromBetween(sub1, sub2) + sub2;\n      this.string = this.string.replace(removal, \"\");\n    },\n    getAllResults: function (sub1, sub2) {\n      // first check to see if we do have both substrings\n      if (this.string.indexOf(sub1) < 0 || this.string.indexOf(sub2) < 0) return; // find one result\n\n      var result = this.getFromBetween(sub1, sub2); // push it to the results array\n\n      this.results.push(result); // remove the most recently found one from the string\n\n      this.removeFromBetween(sub1, sub2); // if there's more substrings\n\n      if (this.string.indexOf(sub1) > -1 && this.string.indexOf(sub2) > -1) {\n        this.getAllResults(sub1, sub2);\n      } else return;\n    },\n    get: function (string, sub1, sub2) {\n      this.results = [];\n      this.string = string;\n      this.getAllResults(sub1, sub2);\n      return this.results;\n    }\n  };\n  let keys = getFromBetween.get(template, \"{\", \"}\");\n  keys.forEach(function (key) {\n    if (obj[key] != undefined) template = template.replace('{' + key + '}', obj[key]);else template = template.replace('{' + key + '}', key);\n  });\n  return template;\n}\nexport default {\n  createBulk,\n  createOsdCustomId,\n  getUID\n};","import XLSX from 'xlsx';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //Recupère le header de la feuille excel\n\nexport function getHeaderRowWithType(sheet) {\n  var headers = [];\n  var range = XLSX.utils.decode_range(sheet['!ref']);\n  var C;\n  let U = 1;\n  var headerCell;\n  var firstValueCell;\n  const typesMapping = {\n    \"s\": \"text\",\n    \"n\": \"float\",\n    \"d\": \"date\",\n    \"b\": \"boolean\"\n  };\n  /* walk every column in the range */\n\n  for (C = range.s.c; C <= range.e.c; ++C) {\n    headerCell = sheet[XLSX.utils.encode_cell({\n      c: C,\n      r: 0\n    })];\n    /* find the cell in the first row */\n\n    firstValueCell = sheet[XLSX.utils.encode_cell({\n      c: C,\n      r: 1\n    })];\n\n    if (headerCell || firstValueCell) {\n      if (!headerCell || !XLSX.utils.format_cell(headerCell).trim()) {\n        headerCell = `UNKNOWN_${U}`;\n        U++;\n      } else {\n        headerCell = formatHeader(XLSX.utils.format_cell(headerCell).trim());\n      }\n\n      headers.push({\n        name: headerCell,\n        type: typesMapping[firstValueCell && firstValueCell.t || 's']\n      });\n    }\n  }\n\n  return headers;\n} //Replace all space in json data keys\n\nexport function formatJSON(json, columns, timezone = false) {\n  const dateColumns = columns.filter(c => c.type === \"date\"); // Iterate over array\n\n  json.forEach(function (e, i) {\n    // Iterate over the keys of object\n    Object.keys(e).forEach(function (key) {\n      // Copy the value\n      var val = e[key],\n          newKey = key.replace(/\\s+/g, '_'); // check date object and manage timezone\n\n      if (timezone && dateColumns.filter(c => newKey === c.name).length > 0) {\n        val = moment(val).tz(timezone).format();\n      } // Remove key-value from object\n\n\n      delete json[i][key]; // Add value with new key\n\n      json[i][newKey] = val;\n    });\n  });\n  return json;\n} //Transform filename to a valid ES index name\n\nexport function setESIndexName(name) {\n  var name = name.split('.')[0]; //removing extension\n\n  name = name.replace(/\\s/g, ''); //removing space\n\n  name = name.replace(/[^a-zA-Z0-9]/g, \"\"); //removing special characters\n\n  name = name.toLowerCase(); //lowercase\n\n  return name;\n} //Replace all space in json header\n\nfunction formatHeader(header) {\n  return header.replace(/ /g, \"_\");\n}\n\nexport function getExtension(filename) {\n  console.log(\"get extension treatment\");\n  return /[.]/.exec(filename) ? /[^.]+$/.exec(filename) : undefined;\n} //export default { getHeaderRowWithType, formatJSON, setESIndexName, getExtension }"],"mappingsxvJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClhesourceRoot":""}